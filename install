#!/bin/bash
# Main installer script for dotfiles
# This script serves as the primary entry point for setting up the entire development environment
set -e

# Define absolute paths regardless of where the script is called from
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
DOTFILES_DIR="$(cd "$SCRIPT_DIR" && pwd)"

# Source logging utilities if available, or create minimal logging functions
if [ -f "$DOTFILES_DIR/scripts/logs" ]; then
    source "$DOTFILES_DIR/scripts/logs"
else
    # Fallback logging functions
    # Function to get current timestamp in ISO 8601 format
    get_timestamp() {
      date +"%Y-%m-%d %H:%M:%S"
    }

    # Core logging functions with timestamp and log type - no fancy formatting
    log() { echo "[$(get_timestamp)][INFO] $1"; }
    log_error() { echo "[$(get_timestamp)][ERROR] $1"; }
    log_success() { echo "[$(get_timestamp)][SUCCESS] $1"; }
    log_warning() { echo "[$(get_timestamp)][WARNING] $1"; }
    log_progress() { echo "[$(get_timestamp)][PROGRESS] $1"; }
    log_complete() { echo "[$(get_timestamp)][COMPLETE] $1"; }

    # Error and exit helper
    error_exit() { log_error "$1"; exit 1; }

    # Simple section header
    section_header() {
        echo -e "\n===== $1 =====\n"
    }

    # Function to detect automated CI environments for conditional behaviors
    is_automated_environment() {
        # Check for common CI/container environment variables
        [[ -n "${CI}" || -n "${CONTAINER}" || -n "${DEVCONTAINER}" ]]
    }
fi

# Detect if we're in a devcontainer environment
detect_devcontainer() {
    if [ -n "${DEVCONTAINER}" ] || [ -n "${CODESPACES}" ] || [ -f "/.dockerenv" ] && [ -d "/workspaces" ]; then
        export DEVCONTAINER=true
        log "Detected devcontainer environment"
        return 0
    fi
    return 1
}

# Display help information when requested
if [[ "$1" == "--help" ]]; then
    section_header "Dotfiles Installer"
    echo "Usage: ./install [--help]"
    echo "This script sets up the dotfiles environment."
    echo
    echo "The installation process will:"
    echo "  1. Run the setup_dotfiles script to configure dotfiles and update git submodules"
    echo "  2. Install required packages"
    echo "  3. Set up automatic configuration for devcontainer environments"
    echo
    exit 0
fi

# Check if this is a devcontainer and set up accordingly
if detect_devcontainer; then
    log_progress "Setting up devcontainer environment"
    # Set non-interactive mode for automated installations
    export DEBIAN_FRONTEND=noninteractive
    # Set environment variables to indicate automated installation
    export AUTOMATED_INSTALL=true
fi

section_header "Dotfiles Installation"

# First run setup script to initialize the environment
section_header "Running Dotfiles Setup"
log_progress "Executing setup_dotfiles script to update git submodules and configure environment"
bash "$DOTFILES_DIR/setup_dotfiles"

# After environment setup, install required development tools
section_header "Package Installation"
log_progress "Installing required packages"
bash "$DOTFILES_DIR/scripts/install_packages"

# Create hook for automatic setup in devcontainer
if detect_devcontainer; then
    section_header "Devcontainer Configuration"
    log_progress "Creating devcontainer initialization hook"

    # Create a script to run on devcontainer startup if it doesn't exist
    DEVCONTAINER_HOOK="$HOME/.devcontainer-init"
    if [ ! -f "$DEVCONTAINER_HOOK" ]; then
        cat > "$DEVCONTAINER_HOOK" << EOF
#!/bin/bash
# Automatically generated dotfiles initialization hook for devcontainer
# This script runs automatically when a devcontainer starts

# Run dotfiles update if available
if [ -d "/workspaces/dotfiles" ]; then
    echo "Updating dotfiles configuration..."
    cd /workspaces/dotfiles && ./install
fi
EOF
        chmod +x "$DEVCONTAINER_HOOK"
        log_success "Created devcontainer initialization hook at $DEVCONTAINER_HOOK"
    fi

    # Add hook to bashrc and zshrc if not already there
    for RC_FILE in "$HOME/.bashrc" "$HOME/.zshrc"; do
        if [ -f "$RC_FILE" ]; then
            if ! grep -q "/.devcontainer-init" "$RC_FILE"; then
                echo -e "\n# Dotfiles devcontainer initialization hook" >> "$RC_FILE"
                echo "[ -f \"$DEVCONTAINER_HOOK\" ] && source \"$DEVCONTAINER_HOOK\"" >> "$RC_FILE"
                log_success "Added devcontainer hook to $(basename "$RC_FILE")"
            fi
        fi
    done
fi

section_header "Installation Complete"
log_complete "Dotfiles have been successfully installed!"
echo
echo "Your new environment is ready to use."
echo "Please restart your terminal or run exec bash to apply all changes."
